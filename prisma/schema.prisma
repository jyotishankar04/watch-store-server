generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  password       String?
  image          String?
  authProvider   String?
  authProviderId String?
  isAdmin        Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Collections {
  id          String  @id @default(uuid())
  name        String
  description String?
  image       String? @default("https://res.cloudinary.com/djby1yfko/image/upload/v1725814229/1724436300_epoa7k.jpg")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Products[]
}

model Products {
  id          String  @id @default(uuid())
  name        String
  description String?
  price       Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  images          Images[]
  features        Features[]
  TechnicalData   TechnicalData @relation(fields: [technicalDataId], references: [id])
  technicalDataId String

  Collection   Collections? @relation(fields: [collectionId], references: [id])
  collectionId String?
}

// https://res.cloudinary.com/djby1yfko/image/upload/v1731149264/23581938_2104.i301.004.S.m004.c13.404_error_isometric_composition_dqhesm.svg
model Images {
  id         String    @id @default(uuid())
  url        String
  Products   Products? @relation(fields: [productsId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productsId String?
}

model Features {
  id         String    @id @default(uuid())
  featName   String
  Products   Products? @relation(fields: [productsId], references: [id])
  productsId String?
}

model TechnicalData {
  id              String  @id @default(uuid())
  case            String?
  strap           String?
  warranty        String?
  dialColor       String?
  waterResistance String?
  logWidth        String?
  creystal        String?
  movement        String?

  dimensions   Dimensions? @relation(fields: [dimensionsId], references: [id])
  dimensionsId String?
  Products     Products[]
}

model Dimensions {
  id            String          @id @default(uuid())
  diameter      String
  length        String
  thickness     String
  TechnicalData TechnicalData[]
}
